package cmd

import (
	"crypto-prices-bot/req"
	"fmt"
	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
	"log"
	"strings"
	"time"
)

type Handler func(update tgbotapi.Update, bot *tgbotapi.BotAPI)

func Start(update tgbotapi.Update, bot *tgbotapi.BotAPI) {
	keys := tgbotapi.NewReplyKeyboard(
		tgbotapi.NewKeyboardButtonRow(
			tgbotapi.NewKeyboardButton("–¶–µ–Ω–∞"),
			tgbotapi.NewKeyboardButton("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"),
		),
	)

	r := tgbotapi.NewMessage(update.Message.Chat.ID,
		"–í–≤–µ–¥–∏—Ç–µ '–¶–µ–Ω–∞ <–¢–∏–∫–µ—Ä1/–¢–∏–∫–µ—Ä2> –∏–ª–∏ '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞'. –ù–∞–ø—Ä–∏–º–µ—Ä '–¶–µ–Ω–∞ ETH/USDT'")

	r.ReplyMarkup = keys

	bot.Send(r)
}

func Convert(update tgbotapi.Update, bot *tgbotapi.BotAPI) {
	r := tgbotapi.NewMessage(update.Message.Chat.ID, "")
	r.ReplyToMessageID = update.Message.MessageID

	args := strings.Split(update.Message.Text, " ")
	if len(args) < 2 {
		r.Text = "–í–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –≤ —Ñ–æ—Ä–º–∞—Ç–µ '–¶–µ–Ω–∞ ETH/BTC'"

		bot.Send(r)
		return
	}

	pair := args[1]
	pair = strings.Replace(pair, "/", "", -1)

	data, err := req.Fetch(pair)
	if err != nil {
		log.Println(err)

		r.Text = "–û—à–∏–±–∫–∞! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —Ç–∏–∫–µ—Ä–∞"

		bot.Send(r)
		return
	}

	r.Text = fmt.Sprintf("üêô Kraken: %.2f", data.Result)

	bot.Send(r)

	go func() {
		err = req.RecordStats(update.Message.From.ID, pair)
		if err != nil {
			log.Println(err)
		}
	}()
}

func Stats(update tgbotapi.Update, bot *tgbotapi.BotAPI) {
	res := tgbotapi.NewMessage(update.Message.Chat.ID, "")
	res.ReplyToMessageID = update.Message.MessageID

	stats, err := req.ShowStats(update.Message.From.ID)
	if err != nil {
		log.Println(err)

		res.Text = "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É. –í–æ–∑–º–æ–∂–Ω–æ, –≤—ã –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª–∏ –∑–∞–ø—Ä–æ—Å–æ–≤"

		bot.Send(res)
		return
	}

	res.Text = fmt.Sprintf("‚è± –ü–µ—Ä–≤—ã–π –∑–∞–ø—Ä–æ—Å: %s\nüìà –ö–æ–ª-–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤: %d\nüîó –ü–æ—Å–ª–µ–¥–Ω—è—è –ø–∞—Ä–∞: %s",
		stats.FirstReq.UTC().Format(time.UnixDate), stats.ReqAmount, stats.LastPair)

	bot.Send(res)
}
